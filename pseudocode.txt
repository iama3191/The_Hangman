Before coding:
(X) Choose theme for the hangman (country names) 
(X) Create list in the words.py file 
(X) Create stages of the hangman (Decide how many stages. The # of stages == # of tries) 

Game:
( ) Import, words, random library, and stages
( ) Generate a random word
( ) Ask to the user for an input (all inputs where be transformed into uppercase)
( ) Check if it is an alphabetic character, a number, or if it's a single character.
    a. If it is a number, display a message of invalid input and ask for a new one.
    b. If the input is greater than 1 character, display message of invalid input and ask for a new one.
    c. If it is an alphabetic character, continue to the next comparison.
( ) Is the letter in the word to guess?
    a. 'y' --> show the place in the word
    b. 'n' --> add the letter to a list of invalid letters and update the hangmans's stages
( ) Count the # of tries and repeat.
( ) if # of tries is 0 and the user hasn't guessed. Display message of good luck for the next time
( ) Ask to the user if he wants to play a new game

#Features to implement
( ) Show colors, simple color scheme (green for winning, red for losing and yellow as a warning)
( ) Add more ASCII art for the game (Title: Hangman, welcome, final message )
( ) No matter if the user gets the word, at the end, a message will be displayed with some info of the country
( ) A personal approach to the user: Ask for his name, and every message must be personal to him