Before coding:
(X) Choose theme for the hangman (country names) 
(X) Create list in the words.py file 
(X) Create stages of the hangman (Decide how many stages. The # of stages == # of tries) 

Game:
(X) Import, words, random library, and stages
(X) Generate a random word
(X) Ask to the user for an input (all inputs where be transformed into uppercase)
(X) Check if it is an alphabetic character, a number, or if it's a single character.
    a. If it is a number, display a message of invalid input and ask for a new one.
    b. If the input's lenght is the same as the secret word, check if it is the secret word.
    c. If it is an alphabetic character, continue to the next comparison.
(X) Check if the letter was already used, what will happen?
    a. Ask for a new input
(X) Is the letter in the word to guess?
    a. 'y' --> show the place in the word, and if it is in one or more places, show them
    b. 'n' --> add the letter to a list of invalid letters and update the hangmans's stages
(X) Count the # of tries and repeat. 
(X) If # of tries is 0 and the user didn't guess. Display message of good luck for the next time
(X) If the user guesses, congratulate him.
(X) Ask to the user if he wants to play a new game

#Features to implement
(Y) Show colors, simple color scheme (green for winning, red for losing and yellow as a warning)
(N) Add more ASCII art for the game (Title: Hangman, welcome, final message )
(N) No matter if the user gets the word, at the end, a message will be displayed with some info of the country
(Y) A personal approach to the user: Ask for his name, and every message must be personal to him
